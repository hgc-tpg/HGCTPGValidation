
def gv

pipeline {
    agent {
        label 'llrgrhgtrig.in2p3.fr'
    }
    options {
        skipDefaultCheckout() 
    }
    stages {
        stage('InstallAutoValidationPackage') {
            steps {
                echo 'Building..'
                script{
                    gv = load "script.groovy"
                }
                sh '''
                uname -a
                whoami
                pwd
                ls -l
                if [ -d "./HGCTPGValidation" ] 
                then
                    rm -rf HGCTPGValidation
                fi
                git clone -b master https://github.com/ebecheva/HGCTPGValidation HGCTPGValidation
                ~/grid_login
                source HGCTPGValidation/env_install.sh
                pip install attrs
                if [ -d "./test_dir" ] 
                then
                    echo "Directory test_dir exists." 
                    rm -rf test_dir
                fi
                mkdir test_dir

                ls -lrt ..
                '''
            }
        }
        stage('InstallCMSSW') {
            steps {
                echo 'InstallCMSSW step..'
                sh '''
                pwd
                cd test_dir
                ~/grid_login
                source /cvmfs/cms.cern.ch/cmsset_default.sh
                export SCRAM_ARCH=slc7_amd64_gcc900
                echo $SCRAM_ARCH
                module purge
                scramv1 p -n CMSSW_12_1_0_pre3_HGCalTPGValidation_ref CMSSW_12_1_0_pre3
                cd CMSSW_12_1_0_pre3_HGCalTPGValidation_ref/src
                echo $PWD
                eval `scramv1 runtime -sh`
                git config --global user.name "Emilia Becheva"
                git config --global user.email emilia.becheva@llr.in2p3.fr
                git cms-merge-topic ebecheva:main-dev-CMSSW_12_1_0_pre3
                git checkout -b local_main-dev-CMSSW_12_1_0_pre3 ebecheva/main-dev-CMSSW_12_1_0_pre3
                scram b -j4
                '''
            }
        }
        stage('ProducingData') {
            steps {
                sh '''
                cd CMSSW_12_1_0_pre3_HGCalTPGValidation_ref/src
                echo $PWD
                eval `scramv1 runtime -sh`
                cmsDriver.py hgcal_tpg_validation -n 50 + \
                --mc --eventcontent FEVTDEBUG --datatier GEN-SIM-DIGI-RAW + \
                --conditions auto:phase2_realistic + \
                --beamspot HLLHC14TeV + \
                --step USER:Validation/HGCalValidation/hgcalRunEmulatorValidationTPG_cff.hgcalTPGRunEmulatorValidation + \
                --geometry Extended2023D17 --era Phase2 --procModifiers '' + \
                --inputCommands "keep *", "drop l1tEMTFHit2016Extras_simEmtfDigis_CSC_HLT","drop l1tEMTFHit2016Extras_simEmtfDigis_RPC_HLT","drop l1tEMTFHit2016s_simEmtfDigis__HLT","drop l1tEMTFTrack2016Extras_simEmtfDigis__HLT","drop l1tEMTFTrack2016s_simEmtfDigis__HLT" + \
                --filein file:/data_CMS_upgrade/becheva/data_jenkins/003F2BA9-0D02-5A43-A53F-4161E513BFA6.root + \
                --no_output --customise=L1Trigger/L1THGCal/customClustering.custom_2dclustering_constrainedtopological + \
                --customise_commands "process.MessageLogger.files.out_ref = dict()\n process.Timing = cms.Service('Timing', summaryOnly = cms.untracked.bool(False), useJobReport = cms.untracked.bool(True))\n process.SimpleMemoryCheck = cms.Service('SimpleMemoryCheck', ignoreTotal = cms.untracked.int32(1))\n process.schedule = cms.Schedule(process.user_step)"
                '''
                script{
                    gv.runcmsDriver()
                }
            }
        }
    }
}
